// +build !ignore_autogenerated_openshift

// This file was autogenerated by conversion-gen. Do not edit it manually!

package v1

import (
	build_v1 "github.com/openshift/api/build/v1"
	build "github.com/openshift/origin/pkg/build/apis/build"
	defaults "github.com/openshift/origin/pkg/build/controller/build/apis/defaults"
	api_core_v1 "k8s.io/api/core/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	core "k8s.io/kubernetes/pkg/apis/core"
	core_v1 "k8s.io/kubernetes/pkg/apis/core/v1"
	unsafe "unsafe"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(scheme *runtime.Scheme) error {
	return scheme.AddGeneratedConversionFuncs(
		Convert_v1_BuildDefaultsConfig_To_defaults_BuildDefaultsConfig,
		Convert_defaults_BuildDefaultsConfig_To_v1_BuildDefaultsConfig,
		Convert_v1_SourceStrategyDefaultsConfig_To_defaults_SourceStrategyDefaultsConfig,
		Convert_defaults_SourceStrategyDefaultsConfig_To_v1_SourceStrategyDefaultsConfig,
	)
}

func autoConvert_v1_BuildDefaultsConfig_To_defaults_BuildDefaultsConfig(in *BuildDefaultsConfig, out *defaults.BuildDefaultsConfig, s conversion.Scope) error {
	out.GitHTTPProxy = in.GitHTTPProxy
	out.GitHTTPSProxy = in.GitHTTPSProxy
	out.GitNoProxy = in.GitNoProxy
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]core.EnvVar, len(*in))
		for i := range *in {
			if err := core_v1.Convert_v1_EnvVar_To_core_EnvVar(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Env = nil
	}
	out.SourceStrategyDefaults = (*defaults.SourceStrategyDefaultsConfig)(unsafe.Pointer(in.SourceStrategyDefaults))
	out.ImageLabels = *(*[]build.ImageLabel)(unsafe.Pointer(&in.ImageLabels))
	out.NodeSelector = *(*map[string]string)(unsafe.Pointer(&in.NodeSelector))
	out.Annotations = *(*map[string]string)(unsafe.Pointer(&in.Annotations))
	if err := core_v1.Convert_v1_ResourceRequirements_To_core_ResourceRequirements(&in.Resources, &out.Resources, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_BuildDefaultsConfig_To_defaults_BuildDefaultsConfig is an autogenerated conversion function.
func Convert_v1_BuildDefaultsConfig_To_defaults_BuildDefaultsConfig(in *BuildDefaultsConfig, out *defaults.BuildDefaultsConfig, s conversion.Scope) error {
	return autoConvert_v1_BuildDefaultsConfig_To_defaults_BuildDefaultsConfig(in, out, s)
}

func autoConvert_defaults_BuildDefaultsConfig_To_v1_BuildDefaultsConfig(in *defaults.BuildDefaultsConfig, out *BuildDefaultsConfig, s conversion.Scope) error {
	out.GitHTTPProxy = in.GitHTTPProxy
	out.GitHTTPSProxy = in.GitHTTPSProxy
	out.GitNoProxy = in.GitNoProxy
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]api_core_v1.EnvVar, len(*in))
		for i := range *in {
			if err := core_v1.Convert_core_EnvVar_To_v1_EnvVar(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Env = nil
	}
	out.SourceStrategyDefaults = (*SourceStrategyDefaultsConfig)(unsafe.Pointer(in.SourceStrategyDefaults))
	out.ImageLabels = *(*[]build_v1.ImageLabel)(unsafe.Pointer(&in.ImageLabels))
	out.NodeSelector = *(*map[string]string)(unsafe.Pointer(&in.NodeSelector))
	out.Annotations = *(*map[string]string)(unsafe.Pointer(&in.Annotations))
	if err := core_v1.Convert_core_ResourceRequirements_To_v1_ResourceRequirements(&in.Resources, &out.Resources, s); err != nil {
		return err
	}
	return nil
}

// Convert_defaults_BuildDefaultsConfig_To_v1_BuildDefaultsConfig is an autogenerated conversion function.
func Convert_defaults_BuildDefaultsConfig_To_v1_BuildDefaultsConfig(in *defaults.BuildDefaultsConfig, out *BuildDefaultsConfig, s conversion.Scope) error {
	return autoConvert_defaults_BuildDefaultsConfig_To_v1_BuildDefaultsConfig(in, out, s)
}

func autoConvert_v1_SourceStrategyDefaultsConfig_To_defaults_SourceStrategyDefaultsConfig(in *SourceStrategyDefaultsConfig, out *defaults.SourceStrategyDefaultsConfig, s conversion.Scope) error {
	out.Incremental = (*bool)(unsafe.Pointer(in.Incremental))
	return nil
}

// Convert_v1_SourceStrategyDefaultsConfig_To_defaults_SourceStrategyDefaultsConfig is an autogenerated conversion function.
func Convert_v1_SourceStrategyDefaultsConfig_To_defaults_SourceStrategyDefaultsConfig(in *SourceStrategyDefaultsConfig, out *defaults.SourceStrategyDefaultsConfig, s conversion.Scope) error {
	return autoConvert_v1_SourceStrategyDefaultsConfig_To_defaults_SourceStrategyDefaultsConfig(in, out, s)
}

func autoConvert_defaults_SourceStrategyDefaultsConfig_To_v1_SourceStrategyDefaultsConfig(in *defaults.SourceStrategyDefaultsConfig, out *SourceStrategyDefaultsConfig, s conversion.Scope) error {
	out.Incremental = (*bool)(unsafe.Pointer(in.Incremental))
	return nil
}

// Convert_defaults_SourceStrategyDefaultsConfig_To_v1_SourceStrategyDefaultsConfig is an autogenerated conversion function.
func Convert_defaults_SourceStrategyDefaultsConfig_To_v1_SourceStrategyDefaultsConfig(in *defaults.SourceStrategyDefaultsConfig, out *SourceStrategyDefaultsConfig, s conversion.Scope) error {
	return autoConvert_defaults_SourceStrategyDefaultsConfig_To_v1_SourceStrategyDefaultsConfig(in, out, s)
}
